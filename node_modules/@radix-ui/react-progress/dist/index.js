var e,r,t,a=require("@radix-ui/react-primitive").Primitive,n=require("@radix-ui/react-context").createContextScope,o=(e={},r=require("react"),Object.keys(r).forEach((function(t){"default"!==t&&"__esModule"!==t&&Object.defineProperty(e,t,{enumerable:!0,get:function(){return r[t]}})})),e),u=(t=require("@babel/runtime/helpers/extends"))&&t.__esModule?t.default:t;const[i,s]=n("Progress");exports.createProgressScope=s;const[l,c]=i("Progress"),d=/*#__PURE__*/o.forwardRef(((e,r)=>{const{__scopeProgress:t,value:n,max:i,getValueLabel:s=v,...c}=e,d=x(i)?i:100,p=g(n,d)?n:null,b=f(p)?s(p,d):void 0;/*#__PURE__*/return o.createElement(l,{scope:t,value:p,max:d},/*#__PURE__*/o.createElement(a.div,u({"aria-valuemax":d,"aria-valuemin":0,"aria-valuenow":f(p)?p:void 0,"aria-valuetext":b,role:"progressbar","data-state":m(p,d),"data-value":null!=p?p:void 0,"data-max":d},c,{ref:r})))}));exports.Progress=d,d.propTypes={max(e,r,t){const a=e[r],n=String(a);return a&&!x(a)?new Error(function(e,r){return`Invalid prop \`max\` of value \`${e}\` supplied to \`${r}\`. Only numbers greater than 0 are valid max values. Defaulting to \`100\`.`}(n,t)):null},value(e,r,t){const a=e[r],n=String(a),o=x(e.max)?e.max:100;return null==a||g(a,o)?null:new Error(function(e,r){return`Invalid prop \`value\` of value \`${e}\` supplied to \`${r}\`. The \`value\` prop must be:\n  - a positive number\n  - less than the value passed to \`max\` (or 100 if no \`max\` prop is set)\n  - \`null\` if the progress is indeterminate.\n\nDefaulting to \`null\`.`}(n,t))}};const p=/*#__PURE__*/o.forwardRef(((e,r)=>{var t;const{__scopeProgress:n,...i}=e,s=c("ProgressIndicator",n);/*#__PURE__*/return o.createElement(a.div,u({"data-state":m(s.value,s.max),"data-value":null!==(t=s.value)&&void 0!==t?t:void 0,"data-max":s.max},i,{ref:r}))}));function v(e,r){return`${Math.round(e/r*100)}%`}function m(e,r){return null==e?"indeterminate":e===r?"complete":"loading"}function f(e){return"number"==typeof e}function x(e){return f(e)&&!isNaN(e)&&e>0}function g(e,r){return f(e)&&!isNaN(e)&&e<=r&&e>=0}exports.ProgressIndicator=p;const b=d;exports.Root=b;const P=p;exports.Indicator=P;
//# sourceMappingURL=index.js.map
